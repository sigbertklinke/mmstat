% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widgetHelper.R
\name{widgetInvalidate}
\alias{widgetInvalidate}
\title{Invalidate the current reactive context}
\usage{
widgetInvalidate(value, millis = NULL, session = getDefaultReactiveDomain())
}
\arguments{
\item{value}{A parameter which determines how fast the current reactive context will be invalidated}

\item{millis}{Approximate milliseconds to wait before invalidating the current reactive context.}

\item{session}{A session object. This is needed to cancel any scheduled invalidations after 
a user has ended the session. If NULL, then this invalidation will not be 
tied to any session, and so it will still occur.}
}
\description{
Schedules the current reactive context to be invalidated in the given number of milliseconds. 
If \code{millis=NULL} then the waiting time is set to 500/\code{value}.
}
\details{
If this is placed within an observer or reactive expression, that object will be 
invalidated (and re-execute) after the interval has passed. The re-execution will reset 
the invalidation flag, so in a typical use case, the object will keep re-executing and 
waiting for the specified interval. It's possible to stop this cycle by adding conditional 
logic that prevents the invalidateLater from being run.
}
\examples{
\dontrun{
  # Press ESC after finishing the app
  demo(testDrawSample)
  demo(testDrawSampleLang)
}
}
\seealso{
\code{\link{invalidateLater}}, \code{\link{widgetDrawSample}}
}
